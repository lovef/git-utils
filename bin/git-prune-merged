#!/usr/bin/env bash

# TODO: evaluate source "$(git --exec-path)/git-sh-setup"


# https://stackoverflow.com/a/13400237/1020871
# https://stackoverflow.com/a/5476278/1020871
while getopts ":hs" flag; do
case "$flag" in
    h) help=true;;
    s) sync=true;;
    :) printf "missing argument for -%s\n\n" "$OPTARG" >&2
       ;;
    \?) printf "illegal option: -%s\n\n" "$OPTARG" >&2
        help=true
        ;;
esac
done

remote="origin"
branch="master"
remoteBranch="$remote/$branch"

usage="$(basename "$0") [options]

    check out $remoteBranch, delete all merged branches and
    prunes origin

where:
    -h  show this help text
    -s  sync $remoteBranch"

if [ "$help" = true ] ; then
    echo "$usage" >&2
    exit 1
fi

if [ "$sync" = true ] ; then
    git fetch $remote $branch
fi

# Exit on error
set -e

# Prune
# https://stackoverflow.com/a/6127884/1020871
git co $remoteBranch
git branch --merged | egrep -v "(^\*|^\s+master$)" | xargs -r git branch -d
git remote prune origin

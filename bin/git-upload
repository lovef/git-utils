#!/usr/bin/env bash

# https://github.com/git/git/blob/master/git-rebase.sh
OPTIONS_STUCKLONG=t
OPTIONS_KEEPDASHDASH=
OPTIONS_SPEC="\
git upload [options]
--
 Uploads current branch to an existing remote tracking branch.
 If no remote branch exist then a new branch is created.

 Available options are
n,new-branch!  push to new branch even if tracking branch already exists
f,force!       force push
"

# https://www.kernel.org/pub/software/scm/git/docs/git-sh-setup.html
. "$(git --exec-path)/git-sh-setup"

total_argc=$#
while test $# != 0
do
	case "$1" in
	--new-branch)  new=true;;
	--force)       force=true;;
	--)
		shift
		break
		;;
	esac
	shift
done
# No positional arguments
test $# -ne 0 && usage

remote="origin"
branch="master"
remoteBranch="$remote/$branch"

# Exit on error
set -e

remote=origin
master="origin/master"
localBranch=`git rev-parse --abbrev-ref HEAD`
if [ "$localBranch" == HEAD ]; then
  echo "push from 'detached HEAD' state is not allowed"
  exit 1
fi
trackingBranch=`git rev-parse --abbrev-ref --symbolic-full-name @{upstream} 2> /dev/null | sed "s/$remote\///"`
if [ "$trackingBranch" == "$master" ]; then
  echo "push to $trackingBranch is not allowed"
  exit 1
elif [ -z "$trackingBranch" ] || [ "$new" ]; then
    user=`git config user.email | sed 's/@.*//'`
    remoteBranch=$user/$localBranch
    echo "push to $remote $remoteBranch"
    git push --set-upstream $remote $localBranch:$remoteBranch
else
    echo "Push to existing branch $trackingBranch"
    options=""
    if [ "$force" = true ] ; then
        options=--force
    fi
    git push $remote $localBranch:$trackingBranch $options
fi
